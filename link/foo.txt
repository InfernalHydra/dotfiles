# If you come from bash you might have to change your //u/rchhong/miniconda3/bin://u/rchhong/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin://u/rchhong/miniconda3/bin:/u/rchhong/Android/Sdk/platform-tools:/u/rchhong/Android/Sdk/tools/bin:/u/rchhong/Android/Sdk/tools:/u/rchhong/Android/Sdk/emulator.
# export PATH=/u/rchhong/bin:/usr/local/bin://u/rchhong/miniconda3/bin://u/rchhong/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin://u/rchhong/miniconda3/bin:/u/rchhong/Android/Sdk/platform-tools:/u/rchhong/Android/Sdk/tools/bin:/u/rchhong/Android/Sdk/tools:/u/rchhong/Android/Sdk/emulator

# Path to your oh-my-zsh installation.
export ZSH=/u/rchhong/.oh-my-zsh
export ANDROID_HOME=/u/rchhong/Android/Sdk
export PATH=//u/rchhong/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin://u/rchhong/miniconda3/bin:/u/rchhong/Android/Sdk/platform-tools:/u/rchhong/Android/Sdk/tools/bin:/u/rchhong/Android/Sdk/tools:/u/rchhong/Android/Sdk/emulator
# Set name of the theme to load. Optionally, if you set this to random
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME=agnoster

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( robbyrussell agnoster )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE=true

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE=true

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE=true

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS=true

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE=true

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION=true

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS=true

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY=true

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: mm/dd/yyyy|dd.mm.yyyy|yyyy-mm-dd
# HIST_STAMPS=mm/dd/yyyy

# Would you like to use another custom folder than /u/rchhong/.oh-my-zsh/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  command-not-found
  dirhistory
  extract
  git
  meteor
  npm
  pip
  sudo
)

source /u/rchhong/.oh-my-zsh/oh-my-zsh.sh

# User configuration

export MANPATH=/usr/local/man:/usr/local/man:

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n 10.153.83.245 53100 128.83.144.18 22 ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS=-arch x86_64

# ssh
export SSH_KEY_PATH=~/.ssh/rsa_id

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run -='cd -'
...=../..
....=../../..
.....=../../../..
......=../../../../..
1='cd -'
2='cd -2'
3='cd -3'
4='cd -4'
5='cd -5'
6='cd -6'
7='cd -7'
8='cd -8'
9='cd -9'
_='sudo '
afind='ack -il'
colors='/$HOME/color.sh'
dlaudio='youtube-dl --add-metadata --embed-thumbnail --extract-audio --audio-format mp3 -o '\''~/Music/%(artist)s - %(title)s.%(ext)s'\'
dlvideo='youtube-dl --sub-lang en --add-metadata --write-sub -o '\''~/Videos/%(artist)s - %(title)s.%(ext)s'\'
fixrefind='sudo refind-mkdefault'
g=git
ga='git add'
gaa='git add --all'
gap='git apply'
gapa='git add --patch'
gau='git add --update'
gav='git add --verbose'
gb='git branch'
gbD='git branch -D'
gba='git branch -a'
gbd='git branch -d'
gbda='git branch --no-color --merged | command grep -vE "^(\+|\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'
gbl='git blame -b -w'
gbnm='git branch --no-merged'
gbr='git branch --remote'
gbs='git bisect'
gbsb='git bisect bad'
gbsg='git bisect good'
gbsr='git bisect reset'
gbss='git bisect start'
gc='git commit -v'
'gc!'='git commit -v --amend'
gca='git commit -v -a'
'gca!'='git commit -v -a --amend'
gcam='git commit -a -m'
'gcan!'='git commit -v -a --no-edit --amend'
'gcans!'='git commit -v -a -s --no-edit --amend'
gcb='git checkout -b'
gcd='git checkout develop'
gcf='git config --list'
gcl='git clone --recurse-submodules'
gclean='git clean -id'
gcm='git checkout master'
gcmsg='git commit -m'
'gcn!'='git commit -v --no-edit --amend'
gco='git checkout'
gcount='git shortlog -sn'
gcp='git cherry-pick'
gcpa='git cherry-pick --abort'
gcpc='git cherry-pick --continue'
gcs='git commit -S'
gcsm='git commit -s -m'
gd='git diff'
gdca='git diff --cached'
gdct='git describe --tags $(git rev-list --tags --max-count=1)'
gdcw='git diff --cached --word-diff'
gds='git diff --staged'
gdt='git diff-tree --no-commit-id --name-only -r'
gdw='git diff --word-diff'
gf='git fetch'
gfa='git fetch --all --prune'
gfg='git ls-files | grep'
gfo='git fetch origin'
gg='git gui citool'
gga='git gui citool --amend'
ggpull='git pull origin "$(git_current_branch)"'
ggpur=ggu
ggpush='git push origin "$(git_current_branch)"'
ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
ghh='git help'
gignore='git update-index --assume-unchanged'
gignored='git ls-files -v | grep "^[[:lower:]]"'
git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'
gk='\gitk --all --branches'
gke='\gitk --all $(git log -g --pretty=%h)'
gl='git pull'
glg='git log --stat'
glgg='git log --graph'
glgga='git log --graph --decorate --all'
glgm='git log --graph --max-count=10'
glgp='git log --stat -p'
glo='git log --oneline --decorate'
globurl='noglob urlglobber '
glod='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'
glods='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'' --date=short'
glog='git log --oneline --decorate --graph'
gloga='git log --oneline --decorate --graph --all'
glol='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'
glola='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --all'
glols='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --stat'
glp=_git_log_prettily
glum='git pull upstream master'
gm='git merge'
gma='git merge --abort'
gmom='git merge origin/master'
gmt='git mergetool --no-prompt'
gmtvim='git mergetool --no-prompt --tool=vimdiff'
gmum='git merge upstream/master'
gp='git push'
gpd='git push --dry-run'
gpf='git push --force-with-lease'
'gpf!'='git push --force'
gpoat='git push origin --all && git push origin --tags'
gpristine='git reset --hard && git clean -dfx'
gpsup='git push --set-upstream origin $(git_current_branch)'
gpu='git push upstream'
gpv='git push -v'
gr='git remote'
gra='git remote add'
grb='git rebase'
grba='git rebase --abort'
grbc='git rebase --continue'
grbd='git rebase develop'
grbi='git rebase -i'
grbm='git rebase master'
grbs='git rebase --skip'
grep='grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
grev='git revert'
grh='git reset'
grhh='git reset --hard'
grm='git rm'
grmc='git rm --cached'
grmv='git remote rename'
groh='git reset origin/$(git_current_branch) --hard'
grrm='git remote remove'
grs='git restore'
grset='git remote set-url'
grss='git restore --source'
grt='cd "$(git rev-parse --show-toplevel || echo .)"'
gru='git reset --'
grup='git remote update'
grv='git remote -v'
gsb='git status -sb'
gsd='git svn dcommit'
gsh='git show'
gsi='git submodule init'
gsps='git show --pretty=short --show-signature'
gsr='git svn rebase'
gss='git status -s'
gst='git status'
gsta='git stash push'
gstaa='git stash apply'
gstall='git stash --all'
gstc='git stash clear'
gstd='git stash drop'
gstl='git stash list'
gstp='git stash pop'
gsts='git stash show --text'
gsu='git submodule update'
gsw='git switch'
gswc='git switch -c'
gtl='gtl(){ git tag --sort=-v:refname -n -l "${1}*" }; noglob gtl'
gts='git tag -s'
gtv='git tag | sort -V'
gunignore='git update-index --no-assume-unchanged'
gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
gup='git pull --rebase'
gupa='git pull --rebase --autostash'
gupav='git pull --rebase --autostash -v'
gupv='git pull --rebase -v'
gwch='git whatchanged -p --abbrev-commit --pretty=medium'
gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'
history=omz_history
l='ls -lah'
la='ls -lAh'
ll='ls -lh'
lock='/$HOME/lock.sh'
ls='ls --color=tty'
lsa='ls -lah'
m='meteor run'
ma='meteor add'
mad='meteor admin'
map='meteor add-platform'
mau='meteor authorized'
mb='meteor build'
mc='meteor create'
mca='meteor configure-android'
mcl='meteor claim'
md='mkdir -p'
mdb='meteor debug'
mde='meteor deploy'
mis='meteor install-sdk'
ml='meteor list'
mli='meteor login'
mlo='meteor logout'
mlog='meteor logs'
mlp='meteor list-platforms'
mls='meteor list-sites'
mm='meteor mongo'
mp='meteor publish'
mpa='meteor publish-for-arch'
mpr='meteor publish-release'
mr='meteor remove'
mre='meteor reset'
mrp='meteor remove-platform'
ms='meteor search'
msh='meteor shell'
msw='meteor show'
mt='meteor test-packages'
mu='meteor update'
mw='meteor whoami'
npmD='npm i -D '
npmE='PATH="$(npm bin)":"$PATH"'
npmI='npm init'
npmL='npm list'
npmL0='npm ls --depth=0'
npmO='npm outdated'
npmP='npm publish'
npmR='npm run'
npmS='npm i -S '
npmV='npm -v'
npmg='npm i -g '
npmst='npm start'
npmt='npm test'
oldvim='im'
pip='noglob pip'
r=R
rd=rmdir
vi=nvim
vim=nvim
which-command=whence
x=extract.
#
# Example aliases
# alias zshconfig=mate /u/rchhong/.zshrc
# alias ohmyzsh=mate /u/rchhong/.oh-my-zsh
alias oldvim=im
alias vim='nvim'
alias vi='nvim'
alias lock='//u/rchhong/lock.sh'
alias colors='//u/rchhong/color.sh'
alias fixrefind=sudo refind-mkdefault
alias dlaudio=youtube-dl --add-metadata --embed-thumbnail --extract-audio --audio-format mp3 -o ~/Music/%(artist)s - %(title)s.%(ext)s
alias dlvideo=youtube-dl --sub-lang en --add-metadata --write-sub -o ~/Videos/%(artist)s - %(title)s.%(ext)s
alias r=R
# >>> conda initialize >>>
# vim .bashrc Contents within this block are managed by 'conda init' vim .bashrc
__conda_setup=
if [ 127 -eq 0 ]; then
    eval 
else
    if [ -f //u/rchhong/miniconda3/etc/profile.d/conda.sh ]; then
        . //u/rchhong/miniconda3/etc/profile.d/conda.sh
    else
        export PATH=//u/rchhong/miniconda3/bin://u/rchhong/miniconda3/bin://u/rchhong/flutter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin://u/rchhong/miniconda3/bin:/u/rchhong/Android/Sdk/platform-tools:/u/rchhong/Android/Sdk/tools/bin:/u/rchhong/Android/Sdk/tools:/u/rchhong/Android/Sdk/emulator
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
if type ag > /dev/null; then
    export FZF_DEFAULT_COMMAND='ag -l --hidden'
fi

if type rg > /dev/null; then
    export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden --vimgrep'
fi

# FZF Double Star Completion
source /usr/share/doc/fzf/examples/key-bindings.zsh
source /usr/share/zsh/vendor-completions/_fzf

export HISTSIZE=2000
export HISTFILESIZE=2000

